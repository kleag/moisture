"""
Django settings for moisture project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
import sys
import logging
from .utils import load_environment_file

# Get an instance of a logger
logger = logging.getLogger(__name__)

load_environment_file('environment.ini')

SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', None)
ALLOWED_HOSTS = ['moisture.nsupdate.info', '192.168.1.21']
# DEBUG = os.environ.get('DJANGO_DEBUG', False)
DEBUG = False

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

#SECRET_KEY = 'django-insecure-x75d$)^!&nrtnzf(6@5y+#10!8-=0qulwphg5ct2-ohfgs9!$i'

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

import os

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
          'django.contrib.auth',
           'django.contrib.contenttypes',
            'django.contrib.sessions',
             'django.contrib.messages',
             'django.contrib.staticfiles',
          'rest_framework',
    'moistureduino.apps.MoistureduinoConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'moisture.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['moistureduino/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'moisture.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC+1'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/home/gael/Projets/moisture/static/'
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        #'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# SMTP Mail service with decouple
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_SMTP_HOST', "")
EMAIL_PORT = os.environ.get('EMAIL_SMTP_PORT', "")
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS', "")
EMAIL_HOST_USER = os.environ.get('EMAIL_USER', "")
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD', "")
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

logger.info(f"Email settings:")
logger.info(f"EMAIL_BACKEND: {EMAIL_BACKEND}")
logger.info(f"EMAIL_HOST: {EMAIL_HOST}")
logger.info(f"EMAIL_PORT: {EMAIL_PORT}")
logger.info(f"EMAIL_USE_TLS: {EMAIL_USE_TLS}")
logger.info(f"EMAIL_HOST_USER: {EMAIL_HOST_USER}")
logger.info(f"EMAIL_HOST_PASSWORD: *******")
logger.info(f"DEFAULT_FROM_EMAIL: {DEFAULT_FROM_EMAIL}")
